package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p5p4;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P5P4.
*/
public class p5p4Dao extends AbstractDao<p5p4, Long> {

    public static final String TABLENAME = "P5P4";

    /**
     * Properties of entity p5p4.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Armf = new Property(1, Integer.class, "armf", false, "ARMF");
        public final static Property Pdp = new Property(2, Integer.class, "pdp", false, "PDP");
        public final static Property Oesd = new Property(3, Integer.class, "oesd", false, "OESD");
        public final static Property Gpct = new Property(4, Integer.class, "gpct", false, "GPCT");
        public final static Property Papd = new Property(5, Integer.class, "papd", false, "PAPD");
        public final static Property Nep = new Property(6, String.class, "nep", false, "NEP");
        public final static Property Plan = new Property(7, Integer.class, "plan", false, "PLAN");
        public final static Property Ntcp = new Property(8, Integer.class, "ntcp", false, "NTCP");
        public final static Property Dpsa = new Property(9, Integer.class, "dpsa", false, "DPSA");
        public final static Property Smeg = new Property(10, Integer.class, "smeg", false, "SMEG");
        public final static Property Hret = new Property(11, Integer.class, "hret", false, "HRET");
        public final static Property Reqp = new Property(12, Integer.class, "reqp", false, "REQP");
        public final static Property Fpag = new Property(13, Integer.class, "fpag", false, "FPAG");
        public final static Property Dlyo = new Property(14, Integer.class, "dlyo", false, "DLYO");
        public final static Property Pbhm = new Property(15, Integer.class, "pbhm", false, "PBHM");
        public final static Property Pbhe = new Property(16, Integer.class, "pbhe", false, "PBHE");
        public final static Property Pagt = new Property(17, Integer.class, "pagt", false, "PAGT");
        public final static Property Pagn = new Property(18, Integer.class, "pagn", false, "PAGN");
        public final static Property Origen = new Property(19, Integer.class, "origen", false, "ORIGEN");
        public final static Property Id_formulario = new Property(20, Integer.class, "id_formulario", false, "ID_FORMULARIO");
        public final static Property Observaciones = new Property(21, String.class, "observaciones", false, "OBSERVACIONES");
    };


    public p5p4Dao(DaoConfig config) {
        super(config);
    }
    
    public p5p4Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P5P4' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'ARMF' INTEGER," + // 1: armf
                "'PDP' INTEGER," + // 2: pdp
                "'OESD' INTEGER," + // 3: oesd
                "'GPCT' INTEGER," + // 4: gpct
                "'PAPD' INTEGER," + // 5: papd
                "'NEP' TEXT," + // 6: nep
                "'PLAN' INTEGER," + // 7: plan
                "'NTCP' INTEGER," + // 8: ntcp
                "'DPSA' INTEGER," + // 9: dpsa
                "'SMEG' INTEGER," + // 10: smeg
                "'HRET' INTEGER," + // 11: hret
                "'REQP' INTEGER," + // 12: reqp
                "'FPAG' INTEGER," + // 13: fpag
                "'DLYO' INTEGER," + // 14: dlyo
                "'PBHM' INTEGER," + // 15: pbhm
                "'PBHE' INTEGER," + // 16: pbhe
                "'PAGT' INTEGER," + // 17: pagt
                "'PAGN' INTEGER," + // 18: pagn
                "'ORIGEN' INTEGER," + // 19: origen
                "'ID_FORMULARIO' INTEGER," + // 20: id_formulario
                "'OBSERVACIONES' TEXT);"); // 21: observaciones
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P5P4'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p5p4 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer armf = entity.getArmf();
        if (armf != null) {
            stmt.bindLong(2, armf);
        }
 
        Integer pdp = entity.getPdp();
        if (pdp != null) {
            stmt.bindLong(3, pdp);
        }
 
        Integer oesd = entity.getOesd();
        if (oesd != null) {
            stmt.bindLong(4, oesd);
        }
 
        Integer gpct = entity.getGpct();
        if (gpct != null) {
            stmt.bindLong(5, gpct);
        }
 
        Integer papd = entity.getPapd();
        if (papd != null) {
            stmt.bindLong(6, papd);
        }
 
        String nep = entity.getNep();
        if (nep != null) {
            stmt.bindString(7, nep);
        }
 
        Integer plan = entity.getPlan();
        if (plan != null) {
            stmt.bindLong(8, plan);
        }
 
        Integer ntcp = entity.getNtcp();
        if (ntcp != null) {
            stmt.bindLong(9, ntcp);
        }
 
        Integer dpsa = entity.getDpsa();
        if (dpsa != null) {
            stmt.bindLong(10, dpsa);
        }
 
        Integer smeg = entity.getSmeg();
        if (smeg != null) {
            stmt.bindLong(11, smeg);
        }
 
        Integer hret = entity.getHret();
        if (hret != null) {
            stmt.bindLong(12, hret);
        }
 
        Integer reqp = entity.getReqp();
        if (reqp != null) {
            stmt.bindLong(13, reqp);
        }
 
        Integer fpag = entity.getFpag();
        if (fpag != null) {
            stmt.bindLong(14, fpag);
        }
 
        Integer dlyo = entity.getDlyo();
        if (dlyo != null) {
            stmt.bindLong(15, dlyo);
        }
 
        Integer pbhm = entity.getPbhm();
        if (pbhm != null) {
            stmt.bindLong(16, pbhm);
        }
 
        Integer pbhe = entity.getPbhe();
        if (pbhe != null) {
            stmt.bindLong(17, pbhe);
        }
 
        Integer pagt = entity.getPagt();
        if (pagt != null) {
            stmt.bindLong(18, pagt);
        }
 
        Integer pagn = entity.getPagn();
        if (pagn != null) {
            stmt.bindLong(19, pagn);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(20, origen);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(21, id_formulario);
        }
 
        String observaciones = entity.getObservaciones();
        if (observaciones != null) {
            stmt.bindString(22, observaciones);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p5p4 readEntity(Cursor cursor, int offset) {
        p5p4 entity = new p5p4( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // armf
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // pdp
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // oesd
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // gpct
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // papd
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // nep
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // plan
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // ntcp
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // dpsa
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // smeg
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // hret
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // reqp
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // fpag
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // dlyo
            cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // pbhm
            cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16), // pbhe
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // pagt
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // pagn
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // origen
            cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // id_formulario
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21) // observaciones
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p5p4 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setArmf(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setPdp(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setOesd(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setGpct(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setPapd(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setNep(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setPlan(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setNtcp(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setDpsa(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setSmeg(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setHret(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setReqp(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setFpag(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setDlyo(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setPbhm(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setPbhe(cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16));
        entity.setPagt(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setPagn(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setOrigen(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setId_formulario(cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20));
        entity.setObservaciones(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p5p4 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p5p4 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
