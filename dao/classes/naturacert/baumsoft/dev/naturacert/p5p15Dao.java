package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p5p15;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P5P15.
*/
public class p5p15Dao extends AbstractDao<p5p15, Long> {

    public static final String TABLENAME = "P5P15";

    /**
     * Properties of entity p5p15.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Tfap = new Property(1, Integer.class, "tfap", false, "TFAP");
        public final static Property Acue = new Property(2, Integer.class, "acue", false, "ACUE");
        public final static Property Naci = new Property(3, Integer.class, "naci", false, "NACI");
        public final static Property Cau = new Property(4, Integer.class, "cau", false, "CAU");
        public final static Property Otro = new Property(5, String.class, "otro", false, "OTRO");
        public final static Property Taap = new Property(6, Integer.class, "taap", false, "TAAP");
        public final static Property Apcs = new Property(7, Integer.class, "apcs", false, "APCS");
        public final static Property Adlt = new Property(8, Integer.class, "adlt", false, "ADLT");
        public final static Property Ana = new Property(9, Integer.class, "ana", false, "ANA");
        public final static Property Dfec = new Property(10, String.class, "dfec", false, "DFEC");
        public final static Property Depo = new Property(11, Integer.class, "depo", false, "DEPO");
        public final static Property Hagu = new Property(12, Integer.class, "hagu", false, "HAGU");
        public final static Property Origen = new Property(13, Integer.class, "origen", false, "ORIGEN");
        public final static Property Id_formulario = new Property(14, Integer.class, "id_formulario", false, "ID_FORMULARIO");
        public final static Property Observaciones = new Property(15, String.class, "observaciones", false, "OBSERVACIONES");
    };


    public p5p15Dao(DaoConfig config) {
        super(config);
    }
    
    public p5p15Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P5P15' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'TFAP' INTEGER," + // 1: tfap
                "'ACUE' INTEGER," + // 2: acue
                "'NACI' INTEGER," + // 3: naci
                "'CAU' INTEGER," + // 4: cau
                "'OTRO' TEXT," + // 5: otro
                "'TAAP' INTEGER," + // 6: taap
                "'APCS' INTEGER," + // 7: apcs
                "'ADLT' INTEGER," + // 8: adlt
                "'ANA' INTEGER," + // 9: ana
                "'DFEC' TEXT," + // 10: dfec
                "'DEPO' INTEGER," + // 11: depo
                "'HAGU' INTEGER," + // 12: hagu
                "'ORIGEN' INTEGER," + // 13: origen
                "'ID_FORMULARIO' INTEGER," + // 14: id_formulario
                "'OBSERVACIONES' TEXT);"); // 15: observaciones
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P5P15'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p5p15 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer tfap = entity.getTfap();
        if (tfap != null) {
            stmt.bindLong(2, tfap);
        }
 
        Integer acue = entity.getAcue();
        if (acue != null) {
            stmt.bindLong(3, acue);
        }
 
        Integer naci = entity.getNaci();
        if (naci != null) {
            stmt.bindLong(4, naci);
        }
 
        Integer cau = entity.getCau();
        if (cau != null) {
            stmt.bindLong(5, cau);
        }
 
        String otro = entity.getOtro();
        if (otro != null) {
            stmt.bindString(6, otro);
        }
 
        Integer taap = entity.getTaap();
        if (taap != null) {
            stmt.bindLong(7, taap);
        }
 
        Integer apcs = entity.getApcs();
        if (apcs != null) {
            stmt.bindLong(8, apcs);
        }
 
        Integer adlt = entity.getAdlt();
        if (adlt != null) {
            stmt.bindLong(9, adlt);
        }
 
        Integer ana = entity.getAna();
        if (ana != null) {
            stmt.bindLong(10, ana);
        }
 
        String dfec = entity.getDfec();
        if (dfec != null) {
            stmt.bindString(11, dfec);
        }
 
        Integer depo = entity.getDepo();
        if (depo != null) {
            stmt.bindLong(12, depo);
        }
 
        Integer hagu = entity.getHagu();
        if (hagu != null) {
            stmt.bindLong(13, hagu);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(14, origen);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(15, id_formulario);
        }
 
        String observaciones = entity.getObservaciones();
        if (observaciones != null) {
            stmt.bindString(16, observaciones);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p5p15 readEntity(Cursor cursor, int offset) {
        p5p15 entity = new p5p15( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // tfap
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // acue
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // naci
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // cau
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // otro
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // taap
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // apcs
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // adlt
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // ana
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // dfec
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // depo
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // hagu
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // origen
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // id_formulario
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15) // observaciones
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p5p15 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setTfap(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setAcue(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setNaci(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setCau(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setOtro(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setTaap(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setApcs(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setAdlt(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setAna(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setDfec(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setDepo(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setHagu(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setOrigen(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setId_formulario(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setObservaciones(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p5p15 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p5p15 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
