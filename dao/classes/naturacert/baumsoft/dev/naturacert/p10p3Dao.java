package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p10p3;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P10P3.
*/
public class p10p3Dao extends AbstractDao<p10p3, Long> {

    public static final String TABLENAME = "P10P3";

    /**
     * Properties of entity p10p3.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Dfdr = new Property(1, Integer.class, "dfdr", false, "DFDR");
        public final static Property Dfrc = new Property(2, Integer.class, "dfrc", false, "DFRC");
        public final static Property Vivi = new Property(3, Integer.class, "vivi", false, "VIVI");
        public final static Property Fuag = new Property(4, Integer.class, "fuag", false, "FUAG");
        public final static Property Arec = new Property(5, Integer.class, "arec", false, "AREC");
        public final static Property Cauc = new Property(6, Integer.class, "cauc", false, "CAUC");
        public final static Property Oada = new Property(7, Integer.class, "oada", false, "OADA");
        public final static Property Comp = new Property(8, Integer.class, "comp", false, "COMP");
        public final static Property Mdli = new Property(9, Integer.class, "mdli", false, "MDLI");
        public final static Property Uldf = new Property(10, String.class, "uldf", false, "ULDF");
        public final static Property Origen = new Property(11, Integer.class, "origen", false, "ORIGEN");
        public final static Property Obser = new Property(12, String.class, "obser", false, "OBSER");
        public final static Property Id_formulario = new Property(13, Integer.class, "id_formulario", false, "ID_FORMULARIO");
    };


    public p10p3Dao(DaoConfig config) {
        super(config);
    }
    
    public p10p3Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P10P3' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'DFDR' INTEGER," + // 1: dfdr
                "'DFRC' INTEGER," + // 2: dfrc
                "'VIVI' INTEGER," + // 3: vivi
                "'FUAG' INTEGER," + // 4: fuag
                "'AREC' INTEGER," + // 5: arec
                "'CAUC' INTEGER," + // 6: cauc
                "'OADA' INTEGER," + // 7: oada
                "'COMP' INTEGER," + // 8: comp
                "'MDLI' INTEGER," + // 9: mdli
                "'ULDF' TEXT," + // 10: uldf
                "'ORIGEN' INTEGER," + // 11: origen
                "'OBSER' TEXT," + // 12: obser
                "'ID_FORMULARIO' INTEGER);"); // 13: id_formulario
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P10P3'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p10p3 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer dfdr = entity.getDfdr();
        if (dfdr != null) {
            stmt.bindLong(2, dfdr);
        }
 
        Integer dfrc = entity.getDfrc();
        if (dfrc != null) {
            stmt.bindLong(3, dfrc);
        }
 
        Integer vivi = entity.getVivi();
        if (vivi != null) {
            stmt.bindLong(4, vivi);
        }
 
        Integer fuag = entity.getFuag();
        if (fuag != null) {
            stmt.bindLong(5, fuag);
        }
 
        Integer arec = entity.getArec();
        if (arec != null) {
            stmt.bindLong(6, arec);
        }
 
        Integer cauc = entity.getCauc();
        if (cauc != null) {
            stmt.bindLong(7, cauc);
        }
 
        Integer oada = entity.getOada();
        if (oada != null) {
            stmt.bindLong(8, oada);
        }
 
        Integer comp = entity.getComp();
        if (comp != null) {
            stmt.bindLong(9, comp);
        }
 
        Integer mdli = entity.getMdli();
        if (mdli != null) {
            stmt.bindLong(10, mdli);
        }
 
        String uldf = entity.getUldf();
        if (uldf != null) {
            stmt.bindString(11, uldf);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(12, origen);
        }
 
        String obser = entity.getObser();
        if (obser != null) {
            stmt.bindString(13, obser);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(14, id_formulario);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p10p3 readEntity(Cursor cursor, int offset) {
        p10p3 entity = new p10p3( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // dfdr
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // dfrc
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // vivi
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // fuag
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // arec
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // cauc
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // oada
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // comp
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // mdli
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // uldf
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // origen
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // obser
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13) // id_formulario
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p10p3 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setDfdr(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setDfrc(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setVivi(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setFuag(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setArec(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setCauc(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setOada(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setComp(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setMdli(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setUldf(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setOrigen(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setObser(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setId_formulario(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p10p3 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p10p3 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
