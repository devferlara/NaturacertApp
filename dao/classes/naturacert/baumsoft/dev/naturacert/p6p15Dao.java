package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p6p15;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P6P15.
*/
public class p6p15Dao extends AbstractDao<p6p15, Long> {

    public static final String TABLENAME = "P6P15";

    /**
     * Properties of entity p6p15.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Lfda = new Property(1, Integer.class, "lfda", false, "LFDA");
        public final static Property Seaa = new Property(2, Integer.class, "seaa", false, "SEAA");
        public final static Property Horp = new Property(3, String.class, "horp", false, "HORP");
        public final static Property Seap = new Property(4, Integer.class, "seap", false, "SEAP");
        public final static Property Silg = new Property(5, Integer.class, "silg", false, "SILG");
        public final static Property Sccm = new Property(6, Integer.class, "sccm", false, "SCCM");
        public final static Property Sccr = new Property(7, Integer.class, "sccr", false, "SCCR");
        public final static Property Siuh = new Property(8, Integer.class, "siuh", false, "SIUH");
        public final static Property Ltcy = new Property(9, Integer.class, "ltcy", false, "LTCY");
        public final static Property Ppqn = new Property(10, Integer.class, "ppqn", false, "PPQN");
        public final static Property Csus = new Property(11, Integer.class, "csus", false, "CSUS");
        public final static Property Origen = new Property(12, Integer.class, "origen", false, "ORIGEN");
        public final static Property Obser = new Property(13, String.class, "obser", false, "OBSER");
        public final static Property Id_formulario = new Property(14, Integer.class, "id_formulario", false, "ID_FORMULARIO");
    };


    public p6p15Dao(DaoConfig config) {
        super(config);
    }
    
    public p6p15Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P6P15' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'LFDA' INTEGER," + // 1: lfda
                "'SEAA' INTEGER," + // 2: seaa
                "'HORP' TEXT," + // 3: horp
                "'SEAP' INTEGER," + // 4: seap
                "'SILG' INTEGER," + // 5: silg
                "'SCCM' INTEGER," + // 6: sccm
                "'SCCR' INTEGER," + // 7: sccr
                "'SIUH' INTEGER," + // 8: siuh
                "'LTCY' INTEGER," + // 9: ltcy
                "'PPQN' INTEGER," + // 10: ppqn
                "'CSUS' INTEGER," + // 11: csus
                "'ORIGEN' INTEGER," + // 12: origen
                "'OBSER' TEXT," + // 13: obser
                "'ID_FORMULARIO' INTEGER);"); // 14: id_formulario
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P6P15'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p6p15 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer lfda = entity.getLfda();
        if (lfda != null) {
            stmt.bindLong(2, lfda);
        }
 
        Integer seaa = entity.getSeaa();
        if (seaa != null) {
            stmt.bindLong(3, seaa);
        }
 
        String horp = entity.getHorp();
        if (horp != null) {
            stmt.bindString(4, horp);
        }
 
        Integer seap = entity.getSeap();
        if (seap != null) {
            stmt.bindLong(5, seap);
        }
 
        Integer silg = entity.getSilg();
        if (silg != null) {
            stmt.bindLong(6, silg);
        }
 
        Integer sccm = entity.getSccm();
        if (sccm != null) {
            stmt.bindLong(7, sccm);
        }
 
        Integer sccr = entity.getSccr();
        if (sccr != null) {
            stmt.bindLong(8, sccr);
        }
 
        Integer siuh = entity.getSiuh();
        if (siuh != null) {
            stmt.bindLong(9, siuh);
        }
 
        Integer ltcy = entity.getLtcy();
        if (ltcy != null) {
            stmt.bindLong(10, ltcy);
        }
 
        Integer ppqn = entity.getPpqn();
        if (ppqn != null) {
            stmt.bindLong(11, ppqn);
        }
 
        Integer csus = entity.getCsus();
        if (csus != null) {
            stmt.bindLong(12, csus);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(13, origen);
        }
 
        String obser = entity.getObser();
        if (obser != null) {
            stmt.bindString(14, obser);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(15, id_formulario);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p6p15 readEntity(Cursor cursor, int offset) {
        p6p15 entity = new p6p15( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // lfda
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // seaa
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // horp
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // seap
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // silg
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // sccm
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // sccr
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // siuh
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // ltcy
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // ppqn
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // csus
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // origen
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // obser
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14) // id_formulario
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p6p15 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setLfda(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setSeaa(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setHorp(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setSeap(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setSilg(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setSccm(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setSccr(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setSiuh(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setLtcy(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setPpqn(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setCsus(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setOrigen(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setObser(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setId_formulario(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p6p15 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p6p15 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
