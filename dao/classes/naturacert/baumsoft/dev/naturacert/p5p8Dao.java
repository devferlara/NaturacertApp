package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p5p8;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P5P8.
*/
public class p5p8Dao extends AbstractDao<p5p8, Long> {

    public static final String TABLENAME = "P5P8";

    /**
     * Properties of entity p5p8.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Armf = new Property(1, Integer.class, "armf", false, "ARMF");
        public final static Property Nstm = new Property(2, Integer.class, "nstm", false, "NSTM");
        public final static Property Nsmt = new Property(3, Integer.class, "nsmt", false, "NSMT");
        public final static Property Rptm = new Property(4, Integer.class, "rptm", false, "RPTM");
        public final static Property Jorn = new Property(5, Integer.class, "jorn", false, "JORN");
        public final static Property Cpdl = new Property(6, Integer.class, "cpdl", false, "CPDL");
        public final static Property Noya = new Property(7, Integer.class, "noya", false, "NOYA");
        public final static Property Fecn = new Property(8, Integer.class, "fecn", false, "FECN");
        public final static Property Npor = new Property(9, Integer.class, "npor", false, "NPOR");
        public final static Property Lpor = new Property(10, Integer.class, "lpor", false, "LPOR");
        public final static Property Tlrf = new Property(11, Integer.class, "tlrf", false, "TLRF");
        public final static Property Nhat = new Property(12, Integer.class, "nhat", false, "NHAT");
        public final static Property Salr = new Property(13, Integer.class, "salr", false, "SALR");
        public final static Property Aefr = new Property(14, Integer.class, "aefr", false, "AEFR");
        public final static Property Hldm = new Property(15, String.class, "hldm", false, "HLDM");
        public final static Property Hlsm = new Property(16, String.class, "hlsm", false, "HLSM");
        public final static Property Hnie = new Property(17, Integer.class, "hnie", false, "HNIE");
        public final static Property Tmnr = new Property(18, Integer.class, "tmnr", false, "TMNR");
        public final static Property Origen = new Property(19, Integer.class, "origen", false, "ORIGEN");
        public final static Property Obser = new Property(20, String.class, "obser", false, "OBSER");
        public final static Property Id_formulario = new Property(21, Integer.class, "id_formulario", false, "ID_FORMULARIO");
    };


    public p5p8Dao(DaoConfig config) {
        super(config);
    }
    
    public p5p8Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P5P8' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'ARMF' INTEGER," + // 1: armf
                "'NSTM' INTEGER," + // 2: nstm
                "'NSMT' INTEGER," + // 3: nsmt
                "'RPTM' INTEGER," + // 4: rptm
                "'JORN' INTEGER," + // 5: jorn
                "'CPDL' INTEGER," + // 6: cpdl
                "'NOYA' INTEGER," + // 7: noya
                "'FECN' INTEGER," + // 8: fecn
                "'NPOR' INTEGER," + // 9: npor
                "'LPOR' INTEGER," + // 10: lpor
                "'TLRF' INTEGER," + // 11: tlrf
                "'NHAT' INTEGER," + // 12: nhat
                "'SALR' INTEGER," + // 13: salr
                "'AEFR' INTEGER," + // 14: aefr
                "'HLDM' TEXT," + // 15: hldm
                "'HLSM' TEXT," + // 16: hlsm
                "'HNIE' INTEGER," + // 17: hnie
                "'TMNR' INTEGER," + // 18: tmnr
                "'ORIGEN' INTEGER," + // 19: origen
                "'OBSER' TEXT," + // 20: obser
                "'ID_FORMULARIO' INTEGER);"); // 21: id_formulario
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P5P8'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p5p8 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer armf = entity.getArmf();
        if (armf != null) {
            stmt.bindLong(2, armf);
        }
 
        Integer nstm = entity.getNstm();
        if (nstm != null) {
            stmt.bindLong(3, nstm);
        }
 
        Integer nsmt = entity.getNsmt();
        if (nsmt != null) {
            stmt.bindLong(4, nsmt);
        }
 
        Integer rptm = entity.getRptm();
        if (rptm != null) {
            stmt.bindLong(5, rptm);
        }
 
        Integer jorn = entity.getJorn();
        if (jorn != null) {
            stmt.bindLong(6, jorn);
        }
 
        Integer cpdl = entity.getCpdl();
        if (cpdl != null) {
            stmt.bindLong(7, cpdl);
        }
 
        Integer noya = entity.getNoya();
        if (noya != null) {
            stmt.bindLong(8, noya);
        }
 
        Integer fecn = entity.getFecn();
        if (fecn != null) {
            stmt.bindLong(9, fecn);
        }
 
        Integer npor = entity.getNpor();
        if (npor != null) {
            stmt.bindLong(10, npor);
        }
 
        Integer lpor = entity.getLpor();
        if (lpor != null) {
            stmt.bindLong(11, lpor);
        }
 
        Integer tlrf = entity.getTlrf();
        if (tlrf != null) {
            stmt.bindLong(12, tlrf);
        }
 
        Integer nhat = entity.getNhat();
        if (nhat != null) {
            stmt.bindLong(13, nhat);
        }
 
        Integer salr = entity.getSalr();
        if (salr != null) {
            stmt.bindLong(14, salr);
        }
 
        Integer aefr = entity.getAefr();
        if (aefr != null) {
            stmt.bindLong(15, aefr);
        }
 
        String hldm = entity.getHldm();
        if (hldm != null) {
            stmt.bindString(16, hldm);
        }
 
        String hlsm = entity.getHlsm();
        if (hlsm != null) {
            stmt.bindString(17, hlsm);
        }
 
        Integer hnie = entity.getHnie();
        if (hnie != null) {
            stmt.bindLong(18, hnie);
        }
 
        Integer tmnr = entity.getTmnr();
        if (tmnr != null) {
            stmt.bindLong(19, tmnr);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(20, origen);
        }
 
        String obser = entity.getObser();
        if (obser != null) {
            stmt.bindString(21, obser);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(22, id_formulario);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p5p8 readEntity(Cursor cursor, int offset) {
        p5p8 entity = new p5p8( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // armf
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // nstm
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // nsmt
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // rptm
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // jorn
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // cpdl
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // noya
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // fecn
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // npor
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // lpor
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // tlrf
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // nhat
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // salr
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // aefr
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // hldm
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // hlsm
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // hnie
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // tmnr
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // origen
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // obser
            cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21) // id_formulario
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p5p8 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setArmf(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setNstm(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setNsmt(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setRptm(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setJorn(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setCpdl(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setNoya(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setFecn(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setNpor(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setLpor(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setTlrf(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setNhat(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setSalr(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setAefr(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setHldm(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setHlsm(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setHnie(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setTmnr(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setOrigen(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setObser(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setId_formulario(cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p5p8 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p5p8 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
