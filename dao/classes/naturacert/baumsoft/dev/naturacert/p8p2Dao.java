package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p8p2;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P8P2.
*/
public class p8p2Dao extends AbstractDao<p8p2, Long> {

    public static final String TABLENAME = "P8P2";

    /**
     * Properties of entity p8p2.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Lfdd = new Property(1, Integer.class, "lfdd", false, "LFDD");
        public final static Property Rcdu = new Property(2, Integer.class, "rcdu", false, "RCDU");
        public final static Property Lfrr = new Property(3, Integer.class, "lfrr", false, "LFRR");
        public final static Property Lfre = new Property(4, Integer.class, "lfre", false, "LFRE");
        public final static Property Ccui = new Property(5, Integer.class, "ccui", false, "CCUI");
        public final static Property Noco = new Property(6, Integer.class, "noco", false, "NOCO");
        public final static Property Noge = new Property(7, Integer.class, "noge", false, "NOGE");
        public final static Property Lafe = new Property(8, Integer.class, "lafe", false, "LAFE");
        public final static Property Caco = new Property(9, Integer.class, "caco", false, "CACO");
        public final static Property Prap = new Property(10, Integer.class, "prap", false, "PRAP");
        public final static Property Tdad = new Property(11, Integer.class, "tdad", false, "TDAD");
        public final static Property Feda = new Property(12, Integer.class, "feda", false, "FEDA");
        public final static Property Dosi = new Property(13, Integer.class, "dosi", false, "DOSI");
        public final static Property Vtdp = new Property(14, Integer.class, "vtdp", false, "VTDP");
        public final static Property Ndlp = new Property(15, Integer.class, "ndlp", false, "NDLP");
        public final static Property Ndqa = new Property(16, Integer.class, "ndqa", false, "NDQA");
        public final static Property Ndqr = new Property(17, Integer.class, "ndqr", false, "NDQR");
        public final static Property Ided = new Property(18, Integer.class, "ided", false, "IDED");
        public final static Property Lfme = new Property(19, Integer.class, "lfme", false, "LFME");
        public final static Property Srya = new Property(20, Integer.class, "srya", false, "SRYA");
        public final static Property Origen = new Property(21, Integer.class, "origen", false, "ORIGEN");
        public final static Property Obser = new Property(22, String.class, "obser", false, "OBSER");
        public final static Property Id_formulario = new Property(23, Integer.class, "id_formulario", false, "ID_FORMULARIO");
    };


    public p8p2Dao(DaoConfig config) {
        super(config);
    }
    
    public p8p2Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P8P2' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'LFDD' INTEGER," + // 1: lfdd
                "'RCDU' INTEGER," + // 2: rcdu
                "'LFRR' INTEGER," + // 3: lfrr
                "'LFRE' INTEGER," + // 4: lfre
                "'CCUI' INTEGER," + // 5: ccui
                "'NOCO' INTEGER," + // 6: noco
                "'NOGE' INTEGER," + // 7: noge
                "'LAFE' INTEGER," + // 8: lafe
                "'CACO' INTEGER," + // 9: caco
                "'PRAP' INTEGER," + // 10: prap
                "'TDAD' INTEGER," + // 11: tdad
                "'FEDA' INTEGER," + // 12: feda
                "'DOSI' INTEGER," + // 13: dosi
                "'VTDP' INTEGER," + // 14: vtdp
                "'NDLP' INTEGER," + // 15: ndlp
                "'NDQA' INTEGER," + // 16: ndqa
                "'NDQR' INTEGER," + // 17: ndqr
                "'IDED' INTEGER," + // 18: ided
                "'LFME' INTEGER," + // 19: lfme
                "'SRYA' INTEGER," + // 20: srya
                "'ORIGEN' INTEGER," + // 21: origen
                "'OBSER' TEXT," + // 22: obser
                "'ID_FORMULARIO' INTEGER);"); // 23: id_formulario
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P8P2'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p8p2 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer lfdd = entity.getLfdd();
        if (lfdd != null) {
            stmt.bindLong(2, lfdd);
        }
 
        Integer rcdu = entity.getRcdu();
        if (rcdu != null) {
            stmt.bindLong(3, rcdu);
        }
 
        Integer lfrr = entity.getLfrr();
        if (lfrr != null) {
            stmt.bindLong(4, lfrr);
        }
 
        Integer lfre = entity.getLfre();
        if (lfre != null) {
            stmt.bindLong(5, lfre);
        }
 
        Integer ccui = entity.getCcui();
        if (ccui != null) {
            stmt.bindLong(6, ccui);
        }
 
        Integer noco = entity.getNoco();
        if (noco != null) {
            stmt.bindLong(7, noco);
        }
 
        Integer noge = entity.getNoge();
        if (noge != null) {
            stmt.bindLong(8, noge);
        }
 
        Integer lafe = entity.getLafe();
        if (lafe != null) {
            stmt.bindLong(9, lafe);
        }
 
        Integer caco = entity.getCaco();
        if (caco != null) {
            stmt.bindLong(10, caco);
        }
 
        Integer prap = entity.getPrap();
        if (prap != null) {
            stmt.bindLong(11, prap);
        }
 
        Integer tdad = entity.getTdad();
        if (tdad != null) {
            stmt.bindLong(12, tdad);
        }
 
        Integer feda = entity.getFeda();
        if (feda != null) {
            stmt.bindLong(13, feda);
        }
 
        Integer dosi = entity.getDosi();
        if (dosi != null) {
            stmt.bindLong(14, dosi);
        }
 
        Integer vtdp = entity.getVtdp();
        if (vtdp != null) {
            stmt.bindLong(15, vtdp);
        }
 
        Integer ndlp = entity.getNdlp();
        if (ndlp != null) {
            stmt.bindLong(16, ndlp);
        }
 
        Integer ndqa = entity.getNdqa();
        if (ndqa != null) {
            stmt.bindLong(17, ndqa);
        }
 
        Integer ndqr = entity.getNdqr();
        if (ndqr != null) {
            stmt.bindLong(18, ndqr);
        }
 
        Integer ided = entity.getIded();
        if (ided != null) {
            stmt.bindLong(19, ided);
        }
 
        Integer lfme = entity.getLfme();
        if (lfme != null) {
            stmt.bindLong(20, lfme);
        }
 
        Integer srya = entity.getSrya();
        if (srya != null) {
            stmt.bindLong(21, srya);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(22, origen);
        }
 
        String obser = entity.getObser();
        if (obser != null) {
            stmt.bindString(23, obser);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(24, id_formulario);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p8p2 readEntity(Cursor cursor, int offset) {
        p8p2 entity = new p8p2( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // lfdd
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // rcdu
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // lfrr
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // lfre
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // ccui
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // noco
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // noge
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // lafe
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // caco
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // prap
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // tdad
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // feda
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // dosi
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // vtdp
            cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // ndlp
            cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16), // ndqa
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // ndqr
            cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18), // ided
            cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19), // lfme
            cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // srya
            cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21), // origen
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // obser
            cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23) // id_formulario
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p8p2 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setLfdd(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setRcdu(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setLfrr(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setLfre(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setCcui(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setNoco(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setNoge(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setLafe(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setCaco(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setPrap(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setTdad(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setFeda(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setDosi(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setVtdp(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setNdlp(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setNdqa(cursor.isNull(offset + 16) ? null : cursor.getInt(offset + 16));
        entity.setNdqr(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setIded(cursor.isNull(offset + 18) ? null : cursor.getInt(offset + 18));
        entity.setLfme(cursor.isNull(offset + 19) ? null : cursor.getInt(offset + 19));
        entity.setSrya(cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20));
        entity.setOrigen(cursor.isNull(offset + 21) ? null : cursor.getInt(offset + 21));
        entity.setObser(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setId_formulario(cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p8p2 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p8p2 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
