package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p6p2;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P6P2.
*/
public class p6p2Dao extends AbstractDao<p6p2, Long> {

    public static final String TABLENAME = "P6P2";

    /**
     * Properties of entity p6p2.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Lfup = new Property(1, Integer.class, "lfup", false, "LFUP");
        public final static Property Eupc = new Property(2, Integer.class, "eupc", false, "EUPC");
        public final static Property Ltcl = new Property(3, Integer.class, "ltcl", false, "LTCL");
        public final static Property Lthr = new Property(4, Integer.class, "lthr", false, "LTHR");
        public final static Property Erdd = new Property(5, Integer.class, "erdd", false, "ERDD");
        public final static Property Lfcc = new Property(6, Integer.class, "lfcc", false, "LFCC");
        public final static Property Ltop = new Property(7, Integer.class, "ltop", false, "LTOP");
        public final static Property Lmdu = new Property(8, Integer.class, "lmdu", false, "LMDU");
        public final static Property Lafr = new Property(9, Integer.class, "lafr", false, "LAFR");
        public final static Property Tetr = new Property(10, Integer.class, "tetr", false, "TETR");
        public final static Property Ladu = new Property(11, Integer.class, "ladu", false, "LADU");
        public final static Property Obje = new Property(12, Integer.class, "obje", false, "OBJE");
        public final static Property Origen = new Property(13, Integer.class, "origen", false, "ORIGEN");
        public final static Property Id_formulario = new Property(14, Integer.class, "id_formulario", false, "ID_FORMULARIO");
        public final static Property Observaciones = new Property(15, String.class, "observaciones", false, "OBSERVACIONES");
    };


    public p6p2Dao(DaoConfig config) {
        super(config);
    }
    
    public p6p2Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P6P2' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'LFUP' INTEGER," + // 1: lfup
                "'EUPC' INTEGER," + // 2: eupc
                "'LTCL' INTEGER," + // 3: ltcl
                "'LTHR' INTEGER," + // 4: lthr
                "'ERDD' INTEGER," + // 5: erdd
                "'LFCC' INTEGER," + // 6: lfcc
                "'LTOP' INTEGER," + // 7: ltop
                "'LMDU' INTEGER," + // 8: lmdu
                "'LAFR' INTEGER," + // 9: lafr
                "'TETR' INTEGER," + // 10: tetr
                "'LADU' INTEGER," + // 11: ladu
                "'OBJE' INTEGER," + // 12: obje
                "'ORIGEN' INTEGER," + // 13: origen
                "'ID_FORMULARIO' INTEGER," + // 14: id_formulario
                "'OBSERVACIONES' TEXT);"); // 15: observaciones
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P6P2'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p6p2 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer lfup = entity.getLfup();
        if (lfup != null) {
            stmt.bindLong(2, lfup);
        }
 
        Integer eupc = entity.getEupc();
        if (eupc != null) {
            stmt.bindLong(3, eupc);
        }
 
        Integer ltcl = entity.getLtcl();
        if (ltcl != null) {
            stmt.bindLong(4, ltcl);
        }
 
        Integer lthr = entity.getLthr();
        if (lthr != null) {
            stmt.bindLong(5, lthr);
        }
 
        Integer erdd = entity.getErdd();
        if (erdd != null) {
            stmt.bindLong(6, erdd);
        }
 
        Integer lfcc = entity.getLfcc();
        if (lfcc != null) {
            stmt.bindLong(7, lfcc);
        }
 
        Integer ltop = entity.getLtop();
        if (ltop != null) {
            stmt.bindLong(8, ltop);
        }
 
        Integer lmdu = entity.getLmdu();
        if (lmdu != null) {
            stmt.bindLong(9, lmdu);
        }
 
        Integer lafr = entity.getLafr();
        if (lafr != null) {
            stmt.bindLong(10, lafr);
        }
 
        Integer tetr = entity.getTetr();
        if (tetr != null) {
            stmt.bindLong(11, tetr);
        }
 
        Integer ladu = entity.getLadu();
        if (ladu != null) {
            stmt.bindLong(12, ladu);
        }
 
        Integer obje = entity.getObje();
        if (obje != null) {
            stmt.bindLong(13, obje);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(14, origen);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(15, id_formulario);
        }
 
        String observaciones = entity.getObservaciones();
        if (observaciones != null) {
            stmt.bindString(16, observaciones);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p6p2 readEntity(Cursor cursor, int offset) {
        p6p2 entity = new p6p2( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // lfup
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // eupc
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // ltcl
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // lthr
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // erdd
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // lfcc
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // ltop
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // lmdu
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // lafr
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // tetr
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // ladu
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // obje
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // origen
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // id_formulario
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15) // observaciones
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p6p2 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setLfup(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setEupc(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setLtcl(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setLthr(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setErdd(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setLfcc(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setLtop(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setLmdu(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setLafr(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setTetr(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setLadu(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setObje(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setOrigen(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setId_formulario(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setObservaciones(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p6p2 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p6p2 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
