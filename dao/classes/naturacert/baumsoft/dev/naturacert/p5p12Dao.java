package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p5p12;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P5P12.
*/
public class p5p12Dao extends AbstractDao<p5p12, Long> {

    public static final String TABLENAME = "P5P12";

    /**
     * Properties of entity p5p12.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Armf = new Property(1, Integer.class, "armf", false, "ARMF");
        public final static Property Pgd = new Property(2, Integer.class, "pgd", false, "PGD");
        public final static Property Numt = new Property(3, Integer.class, "numt", false, "NUMT");
        public final static Property Tdol = new Property(4, Integer.class, "tdol", false, "TDOL");
        public final static Property Fprt = new Property(5, Integer.class, "fprt", false, "FPRT");
        public final static Property Ideo = new Property(6, Integer.class, "ideo", false, "IDEO");
        public final static Property Rel = new Property(7, Integer.class, "rel", false, "REL");
        public final static Property Soc = new Property(8, Integer.class, "soc", false, "SOC");
        public final static Property Pol = new Property(9, Integer.class, "pol", false, "POL");
        public final static Property Cul = new Property(10, Integer.class, "cul", false, "CUL");
        public final static Property De = new Property(11, String.class, "de", false, "DE");
        public final static Property Origen = new Property(12, Integer.class, "origen", false, "ORIGEN");
        public final static Property Id_formulario = new Property(13, Integer.class, "id_formulario", false, "ID_FORMULARIO");
        public final static Property Observaciones = new Property(14, String.class, "observaciones", false, "OBSERVACIONES");
    };


    public p5p12Dao(DaoConfig config) {
        super(config);
    }
    
    public p5p12Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P5P12' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'ARMF' INTEGER," + // 1: armf
                "'PGD' INTEGER," + // 2: pgd
                "'NUMT' INTEGER," + // 3: numt
                "'TDOL' INTEGER," + // 4: tdol
                "'FPRT' INTEGER," + // 5: fprt
                "'IDEO' INTEGER," + // 6: ideo
                "'REL' INTEGER," + // 7: rel
                "'SOC' INTEGER," + // 8: soc
                "'POL' INTEGER," + // 9: pol
                "'CUL' INTEGER," + // 10: cul
                "'DE' TEXT," + // 11: de
                "'ORIGEN' INTEGER," + // 12: origen
                "'ID_FORMULARIO' INTEGER," + // 13: id_formulario
                "'OBSERVACIONES' TEXT);"); // 14: observaciones
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P5P12'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p5p12 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer armf = entity.getArmf();
        if (armf != null) {
            stmt.bindLong(2, armf);
        }
 
        Integer pgd = entity.getPgd();
        if (pgd != null) {
            stmt.bindLong(3, pgd);
        }
 
        Integer numt = entity.getNumt();
        if (numt != null) {
            stmt.bindLong(4, numt);
        }
 
        Integer tdol = entity.getTdol();
        if (tdol != null) {
            stmt.bindLong(5, tdol);
        }
 
        Integer fprt = entity.getFprt();
        if (fprt != null) {
            stmt.bindLong(6, fprt);
        }
 
        Integer ideo = entity.getIdeo();
        if (ideo != null) {
            stmt.bindLong(7, ideo);
        }
 
        Integer rel = entity.getRel();
        if (rel != null) {
            stmt.bindLong(8, rel);
        }
 
        Integer soc = entity.getSoc();
        if (soc != null) {
            stmt.bindLong(9, soc);
        }
 
        Integer pol = entity.getPol();
        if (pol != null) {
            stmt.bindLong(10, pol);
        }
 
        Integer cul = entity.getCul();
        if (cul != null) {
            stmt.bindLong(11, cul);
        }
 
        String de = entity.getDe();
        if (de != null) {
            stmt.bindString(12, de);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(13, origen);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(14, id_formulario);
        }
 
        String observaciones = entity.getObservaciones();
        if (observaciones != null) {
            stmt.bindString(15, observaciones);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p5p12 readEntity(Cursor cursor, int offset) {
        p5p12 entity = new p5p12( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // armf
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // pgd
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // numt
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // tdol
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // fprt
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // ideo
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // rel
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // soc
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // pol
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // cul
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // de
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // origen
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // id_formulario
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14) // observaciones
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p5p12 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setArmf(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setPgd(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setNumt(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setTdol(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setFprt(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setIdeo(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setRel(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setSoc(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setPol(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setCul(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setDe(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setOrigen(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setId_formulario(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setObservaciones(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p5p12 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p5p12 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
