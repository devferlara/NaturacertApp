package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p6p10;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P6P10.
*/
public class p6p10Dao extends AbstractDao<p6p10, Long> {

    public static final String TABLENAME = "P6P10";

    /**
     * Properties of entity p6p10.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Lfda = new Property(1, Integer.class, "lfda", false, "LFDA");
        public final static Property Eada = new Property(2, Integer.class, "eada", false, "EADA");
        public final static Property Salv = new Property(3, Integer.class, "salv", false, "SALV");
        public final static Property Suab = new Property(4, Integer.class, "suab", false, "SUAB");
        public final static Property Foqu = new Property(5, Integer.class, "foqu", false, "FOQU");
        public final static Property Toxi = new Property(6, Integer.class, "toxi", false, "TOXI");
        public final static Property Lans = new Property(7, Integer.class, "lans", false, "LANS");
        public final static Property Leda = new Property(8, Integer.class, "leda", false, "LEDA");
        public final static Property Srtl = new Property(9, Integer.class, "srtl", false, "SRTL");
        public final static Property Smlh = new Property(10, Integer.class, "smlh", false, "SMLH");
        public final static Property Shea = new Property(11, Integer.class, "shea", false, "SHEA");
        public final static Property Origen = new Property(12, Integer.class, "origen", false, "ORIGEN");
        public final static Property Id_formulario = new Property(13, Integer.class, "id_formulario", false, "ID_FORMULARIO");
        public final static Property Observaciones = new Property(14, String.class, "observaciones", false, "OBSERVACIONES");
    };


    public p6p10Dao(DaoConfig config) {
        super(config);
    }
    
    public p6p10Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P6P10' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'LFDA' INTEGER," + // 1: lfda
                "'EADA' INTEGER," + // 2: eada
                "'SALV' INTEGER," + // 3: salv
                "'SUAB' INTEGER," + // 4: suab
                "'FOQU' INTEGER," + // 5: foqu
                "'TOXI' INTEGER," + // 6: toxi
                "'LANS' INTEGER," + // 7: lans
                "'LEDA' INTEGER," + // 8: leda
                "'SRTL' INTEGER," + // 9: srtl
                "'SMLH' INTEGER," + // 10: smlh
                "'SHEA' INTEGER," + // 11: shea
                "'ORIGEN' INTEGER," + // 12: origen
                "'ID_FORMULARIO' INTEGER," + // 13: id_formulario
                "'OBSERVACIONES' TEXT);"); // 14: observaciones
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P6P10'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p6p10 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer lfda = entity.getLfda();
        if (lfda != null) {
            stmt.bindLong(2, lfda);
        }
 
        Integer eada = entity.getEada();
        if (eada != null) {
            stmt.bindLong(3, eada);
        }
 
        Integer salv = entity.getSalv();
        if (salv != null) {
            stmt.bindLong(4, salv);
        }
 
        Integer suab = entity.getSuab();
        if (suab != null) {
            stmt.bindLong(5, suab);
        }
 
        Integer foqu = entity.getFoqu();
        if (foqu != null) {
            stmt.bindLong(6, foqu);
        }
 
        Integer toxi = entity.getToxi();
        if (toxi != null) {
            stmt.bindLong(7, toxi);
        }
 
        Integer lans = entity.getLans();
        if (lans != null) {
            stmt.bindLong(8, lans);
        }
 
        Integer leda = entity.getLeda();
        if (leda != null) {
            stmt.bindLong(9, leda);
        }
 
        Integer srtl = entity.getSrtl();
        if (srtl != null) {
            stmt.bindLong(10, srtl);
        }
 
        Integer smlh = entity.getSmlh();
        if (smlh != null) {
            stmt.bindLong(11, smlh);
        }
 
        Integer shea = entity.getShea();
        if (shea != null) {
            stmt.bindLong(12, shea);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(13, origen);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(14, id_formulario);
        }
 
        String observaciones = entity.getObservaciones();
        if (observaciones != null) {
            stmt.bindString(15, observaciones);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p6p10 readEntity(Cursor cursor, int offset) {
        p6p10 entity = new p6p10( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // lfda
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // eada
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // salv
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // suab
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // foqu
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // toxi
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // lans
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // leda
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // srtl
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // smlh
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // shea
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // origen
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // id_formulario
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14) // observaciones
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p6p10 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setLfda(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setEada(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setSalv(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setSuab(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setFoqu(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setToxi(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setLans(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setLeda(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setSrtl(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setSmlh(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setShea(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setOrigen(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setId_formulario(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setObservaciones(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p6p10 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p6p10 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
