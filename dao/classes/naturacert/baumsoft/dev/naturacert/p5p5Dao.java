package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p5p5;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P5P5.
*/
public class p5p5Dao extends AbstractDao<p5p5, Long> {

    public static final String TABLENAME = "P5P5";

    /**
     * Properties of entity p5p5.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Armf = new Property(1, Integer.class, "armf", false, "ARMF");
        public final static Property Salj = new Property(2, String.class, "salj", false, "SALJ");
        public final static Property Cuot = new Property(3, String.class, "cuot", false, "CUOT");
        public final static Property Piez = new Property(4, String.class, "piez", false, "PIEZ");
        public final static Property Prod = new Property(5, String.class, "prod", false, "PROD");
        public final static Property Sios = new Property(6, Integer.class, "sios", false, "SIOS");
        public final static Property Snpc = new Property(7, Integer.class, "snpc", false, "SNPC");
        public final static Property Tacn = new Property(8, Integer.class, "tacn", false, "TACN");
        public final static Property Origen = new Property(9, Integer.class, "origen", false, "ORIGEN");
        public final static Property Obser = new Property(10, String.class, "obser", false, "OBSER");
        public final static Property Id_formulario = new Property(11, Integer.class, "id_formulario", false, "ID_FORMULARIO");
    };


    public p5p5Dao(DaoConfig config) {
        super(config);
    }
    
    public p5p5Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P5P5' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'ARMF' INTEGER," + // 1: armf
                "'SALJ' TEXT," + // 2: salj
                "'CUOT' TEXT," + // 3: cuot
                "'PIEZ' TEXT," + // 4: piez
                "'PROD' TEXT," + // 5: prod
                "'SIOS' INTEGER," + // 6: sios
                "'SNPC' INTEGER," + // 7: snpc
                "'TACN' INTEGER," + // 8: tacn
                "'ORIGEN' INTEGER," + // 9: origen
                "'OBSER' TEXT," + // 10: obser
                "'ID_FORMULARIO' INTEGER);"); // 11: id_formulario
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P5P5'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p5p5 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer armf = entity.getArmf();
        if (armf != null) {
            stmt.bindLong(2, armf);
        }
 
        String salj = entity.getSalj();
        if (salj != null) {
            stmt.bindString(3, salj);
        }
 
        String cuot = entity.getCuot();
        if (cuot != null) {
            stmt.bindString(4, cuot);
        }
 
        String piez = entity.getPiez();
        if (piez != null) {
            stmt.bindString(5, piez);
        }
 
        String prod = entity.getProd();
        if (prod != null) {
            stmt.bindString(6, prod);
        }
 
        Integer sios = entity.getSios();
        if (sios != null) {
            stmt.bindLong(7, sios);
        }
 
        Integer snpc = entity.getSnpc();
        if (snpc != null) {
            stmt.bindLong(8, snpc);
        }
 
        Integer tacn = entity.getTacn();
        if (tacn != null) {
            stmt.bindLong(9, tacn);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(10, origen);
        }
 
        String obser = entity.getObser();
        if (obser != null) {
            stmt.bindString(11, obser);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(12, id_formulario);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p5p5 readEntity(Cursor cursor, int offset) {
        p5p5 entity = new p5p5( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // armf
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // salj
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // cuot
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // piez
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // prod
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // sios
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // snpc
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // tacn
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // origen
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // obser
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11) // id_formulario
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p5p5 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setArmf(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setSalj(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setCuot(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setPiez(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setProd(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setSios(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setSnpc(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setTacn(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setOrigen(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setObser(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setId_formulario(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p5p5 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p5p5 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
