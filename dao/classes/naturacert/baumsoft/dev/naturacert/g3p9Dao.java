package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.g3p9;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table G3P9.
*/
public class g3p9Dao extends AbstractDao<g3p9, Long> {

    public static final String TABLENAME = "G3P9";

    /**
     * Properties of entity g3p9.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Eadg = new Property(1, Integer.class, "eadg", false, "EADG");
        public final static Property Nomb = new Property(2, Integer.class, "nomb", false, "NOMB");
        public final static Property Fein = new Property(3, Integer.class, "fein", false, "FEIN");
        public final static Property Idas = new Property(4, Integer.class, "idas", false, "IDAS");
        public final static Property Esdc = new Property(5, Integer.class, "esdc", false, "ESDC");
        public final static Property Ubic = new Property(6, Integer.class, "ubic", false, "UBIC");
        public final static Property Arto = new Property(7, Integer.class, "arto", false, "ARTO");
        public final static Property Artp = new Property(8, Integer.class, "artp", false, "ARTP");
        public final static Property Vadp = new Property(9, Integer.class, "vadp", false, "VADP");
        public final static Property Mapa = new Property(10, Integer.class, "mapa", false, "MAPA");
        public final static Property Mrob = new Property(11, Integer.class, "mrob", false, "MROB");
        public final static Property Vdpc = new Property(12, Integer.class, "vdpc", false, "VDPC");
        public final static Property Aeei = new Property(13, Integer.class, "aeei", false, "AEEI");
        public final static Property Rdnc = new Property(14, Integer.class, "rdnc", false, "RDNC");
        public final static Property Origen = new Property(15, Integer.class, "origen", false, "ORIGEN");
        public final static Property Obser = new Property(16, String.class, "obser", false, "OBSER");
        public final static Property Id_formulario = new Property(17, Integer.class, "id_formulario", false, "ID_FORMULARIO");
    };


    public g3p9Dao(DaoConfig config) {
        super(config);
    }
    
    public g3p9Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'G3P9' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'EADG' INTEGER," + // 1: eadg
                "'NOMB' INTEGER," + // 2: nomb
                "'FEIN' INTEGER," + // 3: fein
                "'IDAS' INTEGER," + // 4: idas
                "'ESDC' INTEGER," + // 5: esdc
                "'UBIC' INTEGER," + // 6: ubic
                "'ARTO' INTEGER," + // 7: arto
                "'ARTP' INTEGER," + // 8: artp
                "'VADP' INTEGER," + // 9: vadp
                "'MAPA' INTEGER," + // 10: mapa
                "'MROB' INTEGER," + // 11: mrob
                "'VDPC' INTEGER," + // 12: vdpc
                "'AEEI' INTEGER," + // 13: aeei
                "'RDNC' INTEGER," + // 14: rdnc
                "'ORIGEN' INTEGER," + // 15: origen
                "'OBSER' TEXT," + // 16: obser
                "'ID_FORMULARIO' INTEGER);"); // 17: id_formulario
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'G3P9'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, g3p9 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer eadg = entity.getEadg();
        if (eadg != null) {
            stmt.bindLong(2, eadg);
        }
 
        Integer nomb = entity.getNomb();
        if (nomb != null) {
            stmt.bindLong(3, nomb);
        }
 
        Integer fein = entity.getFein();
        if (fein != null) {
            stmt.bindLong(4, fein);
        }
 
        Integer idas = entity.getIdas();
        if (idas != null) {
            stmt.bindLong(5, idas);
        }
 
        Integer esdc = entity.getEsdc();
        if (esdc != null) {
            stmt.bindLong(6, esdc);
        }
 
        Integer ubic = entity.getUbic();
        if (ubic != null) {
            stmt.bindLong(7, ubic);
        }
 
        Integer arto = entity.getArto();
        if (arto != null) {
            stmt.bindLong(8, arto);
        }
 
        Integer artp = entity.getArtp();
        if (artp != null) {
            stmt.bindLong(9, artp);
        }
 
        Integer vadp = entity.getVadp();
        if (vadp != null) {
            stmt.bindLong(10, vadp);
        }
 
        Integer mapa = entity.getMapa();
        if (mapa != null) {
            stmt.bindLong(11, mapa);
        }
 
        Integer mrob = entity.getMrob();
        if (mrob != null) {
            stmt.bindLong(12, mrob);
        }
 
        Integer vdpc = entity.getVdpc();
        if (vdpc != null) {
            stmt.bindLong(13, vdpc);
        }
 
        Integer aeei = entity.getAeei();
        if (aeei != null) {
            stmt.bindLong(14, aeei);
        }
 
        Integer rdnc = entity.getRdnc();
        if (rdnc != null) {
            stmt.bindLong(15, rdnc);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(16, origen);
        }
 
        String obser = entity.getObser();
        if (obser != null) {
            stmt.bindString(17, obser);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(18, id_formulario);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public g3p9 readEntity(Cursor cursor, int offset) {
        g3p9 entity = new g3p9( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // eadg
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // nomb
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // fein
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // idas
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // esdc
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // ubic
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // arto
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // artp
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9), // vadp
            cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10), // mapa
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // mrob
            cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12), // vdpc
            cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13), // aeei
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // rdnc
            cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // origen
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // obser
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17) // id_formulario
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, g3p9 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setEadg(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setNomb(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setFein(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setIdas(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setEsdc(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setUbic(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setArto(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setArtp(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setVadp(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
        entity.setMapa(cursor.isNull(offset + 10) ? null : cursor.getInt(offset + 10));
        entity.setMrob(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setVdpc(cursor.isNull(offset + 12) ? null : cursor.getInt(offset + 12));
        entity.setAeei(cursor.isNull(offset + 13) ? null : cursor.getInt(offset + 13));
        entity.setRdnc(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setOrigen(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setObser(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setId_formulario(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(g3p9 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(g3p9 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
