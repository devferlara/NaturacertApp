package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p6p8;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P6P8.
*/
public class p6p8Dao extends AbstractDao<p6p8, Long> {

    public static final String TABLENAME = "P6P8";

    /**
     * Properties of entity p6p8.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Ltyl = new Property(1, Integer.class, "ltyl", false, "LTYL");
        public final static Property Ligr = new Property(2, Integer.class, "ligr", false, "LIGR");
        public final static Property Lidp = new Property(3, Integer.class, "lidp", false, "LIDP");
        public final static Property Eicc = new Property(4, Integer.class, "eicc", false, "EICC");
        public final static Property Edcc = new Property(5, Integer.class, "edcc", false, "EDCC");
        public final static Property Origen = new Property(6, Integer.class, "origen", false, "ORIGEN");
        public final static Property Obser = new Property(7, String.class, "obser", false, "OBSER");
        public final static Property Id_formulario = new Property(8, Integer.class, "id_formulario", false, "ID_FORMULARIO");
    };


    public p6p8Dao(DaoConfig config) {
        super(config);
    }
    
    public p6p8Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P6P8' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'LTYL' INTEGER," + // 1: ltyl
                "'LIGR' INTEGER," + // 2: ligr
                "'LIDP' INTEGER," + // 3: lidp
                "'EICC' INTEGER," + // 4: eicc
                "'EDCC' INTEGER," + // 5: edcc
                "'ORIGEN' INTEGER," + // 6: origen
                "'OBSER' TEXT," + // 7: obser
                "'ID_FORMULARIO' INTEGER);"); // 8: id_formulario
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P6P8'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p6p8 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer ltyl = entity.getLtyl();
        if (ltyl != null) {
            stmt.bindLong(2, ltyl);
        }
 
        Integer ligr = entity.getLigr();
        if (ligr != null) {
            stmt.bindLong(3, ligr);
        }
 
        Integer lidp = entity.getLidp();
        if (lidp != null) {
            stmt.bindLong(4, lidp);
        }
 
        Integer eicc = entity.getEicc();
        if (eicc != null) {
            stmt.bindLong(5, eicc);
        }
 
        Integer edcc = entity.getEdcc();
        if (edcc != null) {
            stmt.bindLong(6, edcc);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(7, origen);
        }
 
        String obser = entity.getObser();
        if (obser != null) {
            stmt.bindString(8, obser);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(9, id_formulario);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p6p8 readEntity(Cursor cursor, int offset) {
        p6p8 entity = new p6p8( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // ltyl
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // ligr
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // lidp
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // eicc
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // edcc
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // origen
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // obser
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8) // id_formulario
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p6p8 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setLtyl(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setLigr(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setLidp(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setEicc(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setEdcc(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setOrigen(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setObser(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setId_formulario(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p6p8 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p6p8 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
