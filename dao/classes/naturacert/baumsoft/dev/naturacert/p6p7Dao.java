package naturacert.baumsoft.dev.naturacert;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import naturacert.baumsoft.dev.naturacert.p6p7;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table P6P7.
*/
public class p6p7Dao extends AbstractDao<p6p7, Long> {

    public static final String TABLENAME = "P6P7";

    /**
     * Properties of entity p6p7.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Lfdm = new Property(1, Integer.class, "lfdm", false, "LFDM");
        public final static Property Smen = new Property(2, Integer.class, "smen", false, "SMEN");
        public final static Property Mdcd = new Property(3, Integer.class, "mdcd", false, "MDCD");
        public final static Property Sale = new Property(4, Integer.class, "sale", false, "SALE");
        public final static Property Idma = new Property(5, Integer.class, "idma", false, "IDMA");
        public final static Property Scep = new Property(6, Integer.class, "scep", false, "SCEP");
        public final static Property Origen = new Property(7, Integer.class, "origen", false, "ORIGEN");
        public final static Property Obser = new Property(8, String.class, "obser", false, "OBSER");
        public final static Property Id_formulario = new Property(9, Integer.class, "id_formulario", false, "ID_FORMULARIO");
    };


    public p6p7Dao(DaoConfig config) {
        super(config);
    }
    
    public p6p7Dao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'P6P7' (" + //
                "'_id' INTEGER PRIMARY KEY ," + // 0: id
                "'LFDM' INTEGER," + // 1: lfdm
                "'SMEN' INTEGER," + // 2: smen
                "'MDCD' INTEGER," + // 3: mdcd
                "'SALE' INTEGER," + // 4: sale
                "'IDMA' INTEGER," + // 5: idma
                "'SCEP' INTEGER," + // 6: scep
                "'ORIGEN' INTEGER," + // 7: origen
                "'OBSER' TEXT," + // 8: obser
                "'ID_FORMULARIO' INTEGER);"); // 9: id_formulario
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'P6P7'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, p6p7 entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        Integer lfdm = entity.getLfdm();
        if (lfdm != null) {
            stmt.bindLong(2, lfdm);
        }
 
        Integer smen = entity.getSmen();
        if (smen != null) {
            stmt.bindLong(3, smen);
        }
 
        Integer mdcd = entity.getMdcd();
        if (mdcd != null) {
            stmt.bindLong(4, mdcd);
        }
 
        Integer sale = entity.getSale();
        if (sale != null) {
            stmt.bindLong(5, sale);
        }
 
        Integer idma = entity.getIdma();
        if (idma != null) {
            stmt.bindLong(6, idma);
        }
 
        Integer scep = entity.getScep();
        if (scep != null) {
            stmt.bindLong(7, scep);
        }
 
        Integer origen = entity.getOrigen();
        if (origen != null) {
            stmt.bindLong(8, origen);
        }
 
        String obser = entity.getObser();
        if (obser != null) {
            stmt.bindString(9, obser);
        }
 
        Integer id_formulario = entity.getId_formulario();
        if (id_formulario != null) {
            stmt.bindLong(10, id_formulario);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public p6p7 readEntity(Cursor cursor, int offset) {
        p6p7 entity = new p6p7( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // lfdm
            cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2), // smen
            cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3), // mdcd
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // sale
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5), // idma
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // scep
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // origen
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // obser
            cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9) // id_formulario
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, p6p7 entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setLfdm(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setSmen(cursor.isNull(offset + 2) ? null : cursor.getInt(offset + 2));
        entity.setMdcd(cursor.isNull(offset + 3) ? null : cursor.getInt(offset + 3));
        entity.setSale(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setIdma(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
        entity.setScep(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setOrigen(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setObser(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setId_formulario(cursor.isNull(offset + 9) ? null : cursor.getInt(offset + 9));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(p6p7 entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(p6p7 entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
